name: Build and Release

on:
  push:
    tags:
      - "v*"

permissions:
  contents: write

jobs:
  
  build-linux-and-android:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          architecture: x64
          flutter-version: 3.24.5
      - name: Update dependencies
        run: sudo apt-get update
      - name: Install dependencies
        run: |
          sudo apt-get install -y clang cmake ninja-build pkg-config \
            libgtk-3-0 libgtk-3-dev libglib2.0-dev libunwind-dev \
            libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev \
            libgstreamer-plugins-good1.0-dev
      - name: Install project dependencies
        run: flutter pub get
      - name: Build artifacts
        run: flutter build linux --release
      - name: Build Appimage
        run: bash ./github_appimage_build.sh
      - name: Compress action step
        run:  tar  -C build/linux/x64/release/bundle -cf flutter-chatbot-linux.tar.gz ./
      - name: Linux Release
        uses: actions/upload-artifact@v4
        with:
          name: flutter-chatbot-linux
          path: flutter-chatbot-linux.tar.gz
      - name: Linux Appimage Release
        uses: actions/upload-artifact@v4
        with:
          name: flutter-chatbot-appimage
          path: Flutter_Chatbot-x86_64.AppImage
      - uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '17.x'
      - name: Setup signing
        run: |
                echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 --decode > android/app/keystore.jks
                echo "storePassword=${{ secrets.KEYSTORE_PASSWORD }}" > android/key.properties
                echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> android/key.properties
                echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> android/key.properties
                echo "storeFile=keystore.jks" >> android/key.properties
      - name: Build android
        run: |
          flutter build apk --release
          flutter build apk --release --split-per-abi
      - name: Android Release
        uses: actions/upload-artifact@v4
        with:
          name: flutter-chatbot-android
          path: build/app/outputs/flutter-apk

  build-windows:
    runs-on: windows-latest

    steps:
      - name: check current path
        run: cd
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          architecture: x64
          flutter-version: 3.24.5
      - name: Install project dependencies
        run: flutter pub get
      - name: Enable windows build
        run: flutter config --enable-windows-desktop
      - name: Build artifacts
        run: flutter build windows --release
      - name: Create ZIP archive
        run: |
          cd build\windows\x64\runner\Release
          Compress-Archive -Path * -DestinationPath ../../../flutter_chatbot_win.zip

      - name: Upload ZIP artifact
        uses: actions/upload-artifact@v4
        with:
            name: flutter-chatbot-win
            path: build\windows\flutter_chatbot_win.zip

  upload:
    runs-on: ubuntu-latest

    needs:
      - build-linux-and-android
      - build-windows
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: ./flutter-chatbot-release
          merge-multiple: true
      - name: ChangeLog
        id: changelog
        run: |
          echo "latest<<EOF" >> $GITHUB_OUTPUT
          awk '/^[0-9]/{i++}i==1' CHANGELOG | sed '${/^$/d}' >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          files: flutter-chatbot-release/*
          body: ${{ steps.changelog.outputs.latest }}