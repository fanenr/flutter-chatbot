name: Build and Release

on:
  push:
    tags:
      - "v*"
  workflow_dispatch: # 手动触发

permissions:
  contents: write

jobs:
#   build-apk:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Clone repository
#         uses: actions/checkout@v4
#         with:
#           fetch-depth: 0
#
#       - name: Setup JDK17
#         uses: actions/setup-java@v4
#         with:
#           distribution: "zulu"
#           java-version: "17"
#
#       - name: Setup Flutter
#         uses: subosito/flutter-action@v2
#         with:
#           flutter-version: 3.24.5
#
#       - name: Setup signing
#         run: |
#           echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 --decode > android/app/keystore.jks
#           echo "storePassword=${{ secrets.KEYSTORE_PASSWORD }}" > android/key.properties
#           echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> android/key.properties
#           echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> android/key.properties
#           echo "storeFile=keystore.jks" >> android/key.properties
#
#       - name: Build
#         run: |
#           flutter pub get
#           flutter build apk --target-platform android-arm64
#
#       - name: ChangeLog
#         id: changelog
#         run: |
#           echo "latest<<EOF" >> $GITHUB_OUTPUT
#           awk '/^[0-9]/{i++}i==1' CHANGELOG | sed '${/^$/d}' >> $GITHUB_OUTPUT
#           echo "EOF" >> $GITHUB_OUTPUT
#
#       - name: Release
#         uses: softprops/action-gh-release@v2
#         with:
#           files: |
#             build/app/outputs/flutter-apk/app-release.apk
#             build/app/outputs/flutter-apk/app-release.apk.sha1
#           body: ${{ steps.changelog.outputs.latest }}

  
  build-linux-and-android:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          architecture: x64
          flutter-version: 3.24.5
      - name: Update dependencies
        run: sudo apt-get update
      - name: Install dependencies
        run: sudo apt-get install -y clang cmake ninja-build pkg-config libgtk-3-0 libgtk-3-dev libblkid1 liblzma5
      - name: Install project dependencies
        run: flutter pub get
      - name: Build artifacts
        run: flutter build linux --release
      - name: Build Appimage
        run: bash ./github_appimage_build.sh
      - name: Compress action step
        run:  tar  -C build/linux/x64/release/bundle -cf flutter-chatbot-linux.tar.gz ./
      - name: Linux Release
        uses: actions/upload-artifact@v4
        with:
          name: flutter-chatbot-linux
          path: flutter-chatbot-linux.tar.gz
      - name: Linux Appimage Release
        uses: actions/upload-artifact@v4
        with:
          name: flutter-chatbot-appimage
          path: Flutter_Chatbot-x86_64.AppImage
      - uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '17.x'
      - name: Setup signing
        run: |
                echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 --decode > android/app/keystore.jks
                echo "storePassword=${{ secrets.KEYSTORE_PASSWORD }}" > android/key.properties
                echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> android/key.properties
                echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> android/key.properties
                echo "storeFile=keystore.jks" >> android/key.properties
      - name: Build android
        run: |
          flutter build apk --release
          flutter build apk --release --split-per-abi
#         env:
#           KEYSTORE: flutter-chatbot.jks
#           KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
#           KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
#           KEY_PASSWORD: ${{ secrets.KEY_PASSWORD}}
      - name: Android Release
        uses: actions/upload-artifact@v4
        with:
          name: flutter-chatbot-android
          path: build/app/outputs/flutter-apk

  build-windows:
    runs-on: windows-latest

    steps:
      - name: check current path
        run: cd
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          architecture: x64
          flutter-version: 3.24.5
      - name: Install project dependencies
        run: flutter pub get
      - name: Enable windows build
        run: flutter config --enable-windows-desktop
      - name: Build artifacts
        run: flutter build windows --release
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
            node-version: 20
      - name: install evb
        run: npm install enigmavirtualbox -g
      - name: create evb file
        run: dart .\dev\windows_evb_config_generator.dart
      - name: build single exe file
        run: enigmavirtualbox cli "flutter-chatbot.evb"
      - name: Windows Release
        uses: actions/upload-artifact@v4
        with:
          name: flutter-chatbot-win
          path: flutter-chatbot.exe

  build-macos-and-ios:
    runs-on: macos-14

    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          architecture: arm64
          flutter-version: 3.24.5
      - name: Install project dependencies
        run: flutter pub get
      - name: Enable macOS build
        run: flutter config --enable-macos-desktop
      - name: Build artifacts
        run: flutter build macos --release
      - name: install npm
        run: /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
      - name: install appdmg
        run: npm install -g appdmg
      - name: build dmg
        run: appdmg ./dmg/config.json ./build/macos/Build/Products/Release/flutter-chatbot.dmg
      - name: macOS Release
        uses: actions/upload-artifact@v4
        with:
          name: flutter-chatbot-macos
          path: build/macos/Build/Products/Release/flutter-chatbot.dmg
      - name: Build ios
        run: |
          flutter build ios --release --no-codesign
          ln -sf ./build/ios/iphoneos Payload
          zip -r9 flutter-chatbot-release.ipa Payload/runner.app
      - name: ios Release
        uses: actions/upload-artifact@v4
        with:
          name: flutter-chatbot-ios
          path: flutter-chatbot-release.ipa


  upload:
    runs-on: ubuntu-latest

    needs:
      - build-linux-and-android
      - build-windows
      - build-macos-and-ios
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: ./flutter-chatbot-release
          merge-multiple: true
      - name: Install dependencies
        run: sudo apt-get install tree -y
      - name: Upload Release
        uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.GIT_TOKEN }}
          omitBodyDuringUpdate: true
          omitNameDuringUpdate: true
          omitPrereleaseDuringUpdate: true
          allowUpdates: true
          artifacts: flutter-chatbot-release/*